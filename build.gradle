import org.gradle.api.tasks.bundling.Jar
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'maven-publish'
	id 'dev.architectury.loom' version '0.12.0-SNAPSHOT' apply false
}

allprojects {
	apply plugin: 'maven-publish'
	apply plugin: 'java'
	apply plugin: 'dev.architectury.loom'


	java.toolchain.languageVersion = JavaLanguageVersion.of(17)

	repositories {
		mavenLocal()
	}

	dependencies {
		minecraft "com.mojang:minecraft:$project.minecraft_version"
		mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"

		forge "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("META-INF/mods.toml") {
			expand "version": project.version
		}
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	tasks.withType(JavaCompile) {
		it.options.encoding = "UTF-8"
	}
}

subprojects {


	configurations { remapped }
	artifacts.add("remapped", remapJar)
	version = rootProject.version

	publishing {
		publications {
			mavenJava(MavenPublication) {
				// add all the jars that should be included when publishing to maven
				artifact(remapJar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}
	}
}

loom{
	forge{
		mixinConfigs = ["mixins.terraform-dirt.json","mixins.terraform-leaves.json","mixins.terraform-signs.json","mixins.terraform-boats.json","mixins.terraform-tree-api-v1.json", "mixins.terraform-utils.json", "mixins.terraform-biome-remapper.json"]
	}
}

archivesBaseName = "terraform-forge"
version = "${version}"

dependencies {
	afterEvaluate {
		subprojects.each {
			if (it.name != "terraform-biome-remapper-api-v1"){
				implementation project(path: "${it.name}", configuration: "namedElements")
				include project("${it.name}:")
			}
		}
	}
}
