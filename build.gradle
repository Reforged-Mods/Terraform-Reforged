import org.gradle.api.tasks.bundling.Jar
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'maven-publish'
	id 'dev.architectury.loom' version '0.11.0-SNAPSHOT' apply false
}

static def formatVersion(project, version) {
	return version;
}

allprojects {
	apply plugin: 'maven-publish'
	apply plugin: 'java'


	java.toolchain.languageVersion = JavaLanguageVersion.of(17)

	repositories {
		mavenLocal()
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}
}

subprojects {
	apply plugin: 'dev.architectury.loom'


	configurations { remapped }
	artifacts.add("remapped", remapJar)


	dependencies {
		minecraft "com.mojang:minecraft:$project.minecraft_version"
		mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"

		forge "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("META-INF/mods.toml") {
			expand "version": project.version
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				// add all the jars that should be included when publishing to maven
				artifact(remapJar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}
	}
}



task allJar(type: Jar, dependsOn: subprojects.remapJar) {
	classifier = ''
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
	subprojects.each { subproject ->
		from subproject.sourceSets.main.output
	}
	manifest {
		attributes([
				"MixinConfigs": "mixins.terraform-biome-builder.json,mixins.terraform-dirt.json,mixins.terraform-leaves.json,mixins.terraform-signs.json,mixins.terraform-overworld-biome-extensions.json,mixins.terraform-tree-api-v1.json"
		])
	}
}

task allSourcesJar(type: Jar, dependsOn: subprojects.sourcesJar) {
	classifier = 'sources'
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
	subprojects.each { subproject ->
		from subproject.sourceSets.main.allSource
	}
	manifest {
		attributes([
				"MixinConfigs": "mixins.terraform-biome-builder.json,mixins.terraform-dirt.json,mixins.terraform-leaves.json,mixins.terraform-signs.json,mixins.terraform-overworld-biome-extensions.json,mixins.terraform-tree-api-v1.json"
		])
	}
}

artifacts {
	//archives allSourcesJar
	//archives allJar
}
